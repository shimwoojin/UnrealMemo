#pragma once
/*
	0. 레벨의 우측 상단에 스냅 옵션에서 t, r, s에 대해 모눈 종이처럼 끊어서 값을 세팅할 수 있게끔 기본값으로 잡혀있고 그 값에 대해 세팅도 가능하지만
	풀어서 쓰는게 부드러워서 좋음
	카메라의 속도도 제어 가능, 기본값은 4, 1
	
	1. 액터 트랜스폼 변경 단축키 w : 트랜지션, e : 로테이션, r : 스케일
	
	2. 블루프린트에서 흰색 선을 따라가는 게 함수를 호출하는 순서인 듯
	
	3. 블루프린트 클래스의 변수 디테일에서 인스턴스 편집, 블루프린트 읽기전용, 툴팁, 스폰시 노출, 프라이빗, 시네마틱에 노출, 카테고리 설정 가능
	 - 카테고리를 더 세분화하고 싶으면 | or 비트연산자 사용
	
	4. 변수에 대해 getter, setter를 써야한다면 변수를 블루프린트로 끌어서 놓을 때 ctrl -> getter, alt -> setter임
	
	5. 액터를 새로 만들고 나서 컴포넌트를 추가하면 default로 잡혀 있던 최상위 컴포넌트를 덮어씌우는 게 좋은데
	 부모로 만들고 싶은 컴포넌트를 그 위치로 드래그해서 놓아주면 됨
	
	6. 컨스트럭션 스크립트는 액터를 레벨에 배치했을 때 적용되는 그래프, 초기값 혹은 생성자의 느낌
	
	7. 블프의 함수는 키워드를 지어주면 검색할 때 그 키워드로 찾아짐
	
	8. 퓨어 함수는 원래의 목적이 로컬이 아닌 외부변수는 변경이 불가능하고 입력과 출력이 같은 함수에 대해 적용하는데
	이것을 엔진에서 막아주지는 못하고 스스로 지켜야 하는 규칙이며
	퓨어가 불리는 시점은 반환값이 쓰이는 시점임. 퓨어함수의 반환값을 여러군데에서 갖다 쓰게 되면 퓨어함수는 그만큼 호출되는 것이고
	혹시라도 함수 내부에서 변경되는 값이 있다면 의도치 않은 결과가 있을 수 있음
	
	9. 당연스럽게도 함수의 입력과 출력에 대해 핀을 만들 수 있고 언리얼 블프의 특징인 것인지 출력값은 여러군데에서 사용 가능
	아마 출력값을 여러군데에서 가져다 쓰는 건 반환값에 대해 저장해놓는 변수를 따로 지정하지 않아도 엔진에서 저장해놓기 떄문이라 봄
	
	10. begin play 이벤트는 레벨이 play되었을 때 실행, 액터마다 설정 가능
	
	11. 블프 if문의 정식 명칭은 branch이고 검색 시 if 혹은 branch로 찾을 수 있음
	
	12. 노드에 코멘트를 다는 것은 노드에 마우스를 갖다대면 왼쪽 상단에 말풍선이 뜨는데 거기서 가능, 우클릭 후 코멘트에다가 써도 가능
	
	13. 노드를 연결한 선에 대해 따로 빼서 정리해야할 때 선에 대해 더블 클릭 후 생긴 경유 노드에 대해 alt클릭 후 드래그해서 빼낼 수 있음
	만들 때 부터 경유노드를 지정해야 한다면 add reroute node가 풀네임인데 addre 이런식으로 검색 가능
	
	14. ctrl클릭 후 노드들을 묶어서 c로 블록 단위로 노드들을 관리할 수 있고 색, 글씨 크기, 줌을 당겨서 멀리서 보았을 때도 보일지를 정할 수 있음
	단축키 c가 아니라면 노드들을 클릭 후 코멘트 달기에 코멘트 달아도 가능
	
	15. 구조체를 만드는 건 어렵지 않으나 구조체의 멤버를 따로 끌어다 써야한다거나 하는 세밀한 작업에선 다루는 방법을 알아야 함
	구조체를 만들 때 단일 변수, 배열, set, map으로 만들지에 대한 값도 설정할 수 있음
	bool변수였을 때는 set이랑 map이 잠겨있었는데 간단히 생각하면 set은 집합, map은 key-value구조이기 때문에 의미가 없으니 잠가놓은 듯
	기본값도 설정 가능
	
	16. 블프에서 구조체에 대해 만들기, 분해, 설정이 가능한데 각각 make, break, set members in <구조체 이름> 키워드 임
	
	17. 만들기는 temp같은 역할을 하는 것으로 보임
	temp이지만 노드에서 우클릭 후 변수로 승격 가능, 변수로 승격하게 되면 블프 클래스의 멤버변수가 됨
	
	18. 구조체 클릭 후 pin option에서 핀 숨기는 기능 있음
	
	19. 기본적으로 구조체의 멤버가 필요하다면 핀 분할로 개별 멤버를 끌어다가 쓸 수 있지만
	구조체 자체가 필요하고 구조체의 멤버가 필요하다면 분해 기능을 쓰는 것이 좋아보임
	
	20. make vector4의 경우 2가지가 나오는데 각각 non-custom, custom임
	custom이 지원하는 기능이 더 많으나 non-custom이 깔끔하게 쓰기에 좋아보임
	참고로 custom은 노드에 한글로 적혀있었음
	
	21. 내가 쓰고 싶은 레이아웃을 저장할 수 있고 창 -> 레이아웃 관련 탭에서 불러오기, 저장 등 가능함
	수업에선 콘텐츠 브라우저는 2개 띄우고 레벨을 크게 볼 수 있는 화면을 볼 수 있게끔 잡아놨음
	
	22. level이랑 구조체, blueprint등은 폴더 단위로 관리하는 것이 좋아보임
*/