#pragma once
/*

	1. 데이터 에셋을 만들어서 구조체 데이터들을 관리하려고 하는데
	 - primary data asset 블프 클래스를 만들어서 멤버 변수로 구조체 배열을 추가해줬고
	 - 위에서 만든 클래스를 이용해 데이터 에셋을 만들고 나니깐
	 - 데이터 양이 많아지면 관리하기 힘들어지는 문제가 생겼는데
	 - 데이터 에셋을 더블클릭해서 들어오게 되면 우측 상단에 프로퍼티 매트릭스를 누르고
	 - 좌측 상단에 MontageData를 선택하고 ( 구조체 배열 데이터 혹은 편집하려는 데이터 선택)
	 - 우측에 나온 구조체의 각각 데이터에 대해 핀 선택을 해주면
	 - DataSheet 형태로 데이터를 관리할 수 있음

	2. 기본적으로 우리는 데이터 에셋을 통해 칼을 집어 넣고 꺼내는 몽타주를 관리하려는 것임
	 - 칼을 꺼내는 Draw동작은 이미 몽타주로 만들어져있는데
	 - 칼을 집어 넣는 동작을 구현하려면 2가지 방법이 있음
	 
	 2.1) Draw를 역재생하는 방법
	  - Section을 Draw의 맨 끝에 하나 만들어주고(End라는 이름으로 줌)
	  - Play Rate을 1이 아닌 -1로 주고 Draw를 재생시키면 역재생이 됨

	 2.2) Draw를 역재생한 걸 녹화해서 Sheath 몽타주를 새로 만드는 방법
	  - 마찬가지로 Draw 애니메이션의 끝에 End로 Section 만들어주고
	  - 녹화 버튼 눌러서 경로 지정해주고
	  - 역재생으로 녹화해준 다음에
	  - 녹화 파일(시퀀스)로 가서 필요한 부분의 영상만 따주면 되는데
	  - 프레임 관련 정보들이 뜨는 탭에서 자를 위치에 우클릭하고 0부터N 혹은 N부터 끝까지 자르기 중에 골라쓰면 됨
	  - 편집한 시퀀스는 몽타주로 다시 만들어주기만 하면 됨

	3. 결론적으로 우리가 하려는 것은 무기를 2개 이상 뽑을 때의 로직을 처리하는 것인데
	 - 캐릭터가 무기를 뽑거나 넣는 몽타주를 캐릭터의 상태랑 엮어서 Map으로 BP_Weapon이 관리하려는 것이였고
	 - 그래서 BP_Weapon에 Map변수 하나 만들어서 Key는 CharacterState주고 Value는 DataAsset을 줬음
	 - Map에 데이터 채워줬는데 State는 Arming, Value는 ArmingSwordData를 줬음

	4. 이렇게 만든 Map 데이터를 우리가 외부에서 변경을 가해버리면 안되기 때문에 
	 - DataAsset에서 변수에 Private주고 Getter를 만들어줬음
	 - 물론 실제 데이터를 추가하거나 빼야한다면 그러한 함수를 만들어줘야 할 것임

	5. 노드에서 동그라미 표시는 사본, 각진 마름모는 래퍼런스 형태로 반환되는 것임
	 - 우리는 리턴값은 사본으로 리턴 직전엔 래퍼런스로 설정해줬음

	6. 함수를 다룰 때 input으로 받은 값들에 대해 직접 핀끼리 잇는게 아니라 Get(input핀이름) 이런 식으로 간접적으로 사용가능
	 - 깔끔한 정리를 원한다면 ?

	7. 한 가지 착각했던 것이 있는데
	 - PrimaryDataAsset 클래스를 만들고 그 클래스를 기반으로 DataAsset을 만들었는데
	 - 이걸 Static 멤버함수처럼 쓴 것으로 착각했었음
	 - PrimaryDataAsset을 기반으로 만든 DataAsset을 실제로 BP_Weapon에서 들고있고
	 - 이 DataAsset에서 얻어오는 것이라는 것을 알려주어야 PrimaryDataAsset에서 만든 멤버함수도 사용가능한 것임
	 - 추가로 DataAsset은 전역에서 접근가능한 것이 아니고 변수가 PrimaryDataAsset클래스의 형태를 띌 때
	  만든 DataAsset을 걸어줄 수 있음

	8. 무기를 드는 로직을 보다보니 Arming이란 딱 칼을 꺼내는 그 시점에만 그 상태이고 칼을 꺼내는 모션이 지나고 나면
	Idle -> Arming -> Idle이 바로 진행되어야 함(Arming은 몽타주가 진행되는 그 순간에만 Arming 상태)

	9. 몽타주 재생 함수의 출력 핀을 보면 몽타주가 재생되고 나서의 작업 처리 핀도 있고 몽타주내의 노티파이에 대해서도 처리할 수 있는 핀이 있음
	 - 몽타주가 다 재생되고 나서 상태를 다시 Idle로 바꾸고
	 - 몽타주내의 노티파이를 통해서 SelectedWeapon의 상태를 바꿔줌
	 - 몽타주내의 노티파이 시점은 실제로도 애니메이션 중에 칼을 집거나 놓는 시점임 (MontageNotify 선택)


	10. 무기를 낄 때 고려해야 할 상황이 3가지가 있는데
	 - 무기를 아예 안 꼈을 경우 입력 이벤트에 따라 그에 맞는 무기를 껴주면 되는 것이고 (1)
	 - 무기를 착용하고 있었을 경우 ?
	  - 그 무기가 전에 끼던 무기랑 같으면 그냥 집어넣고 (2)
	  - 그 무기가 전에 끼던 무기랑 다르면 집어넣고 나서 다시 입력 이벤트에 맞는 무기를 장착해줘야 함 (3)

	11. (3)로직에 대해서 몽타주를 실행시켜주는 곳으로 흐름을 돌려주는데
	 - 이때 블프라서 가능했던 것이 SelectedWeapon이 None으로 바껴있기 때문에
	 - 장착하는 몽타주를 재생하고 입력 이벤트에 맞는 Weapon을 껴줄 수 있음


*/