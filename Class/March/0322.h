#pragma once
/*
	1. 상태에 대해 Switch로 분기해서 멤버함수로 오버라이딩해서 몽타주를 정하는 함수를 더 유연하게 짜는 방법에 대해서 과제로 나왔었는데
	 - 답은 Map 컨테이너를 사용하는 것이였음
	 - 하지만 단순히 이 Map 컨테이너를 BP_Weapon이 가지고 있는 것 또한 문제가 있었는데
	 - BP_Weapon이 상속시켜줄 무기들이 이 Map변수에 대해서 무기마다 가지고 있는데 이럴 필요가 없다는 것임
	 - C++에선 정적 멤버 변수 ( 클래스내에서 사용하는 Static 변수 )로 쉽게 클래스 간에 공유가 가능하지만 블프에선 우회해서 가야 함 (블프는 정적 멤버 변수 불가)

	2. 공유 데이터에 대해서 처리를 해줘야 하는 상황이기 때문에 사용할 수 있는 방법에 대해서 설명한 것들 중에 데이터 테이블이라는 것이 있었음
	 - 콘텐츠 브라우저 - 기타 - 데이터 테이블로 만들 수 있었고
	 - 만들 때 어떤 데이터 타입에 대해서 만들지 정할 수 있었는데
	 - 데이터 타입이 열 단위로 작성할 수 있고
	 - 데이터가 늘어나면 행이 늘어나는 식의 흔하게 볼 수 있는 테이블 형태로 관리하는 방법임
	 
	 - 장점 : csv 편집 가능(엑셀, 외부 편집)
	 - 기획자랑 일할 때 써봄직한 기능

	 3. 데이터 테이블에서 csv파일로 추출도 가능하고 외부에 있는 csv파일에 대해서 정보를 읽어와서 에디터 내에 있는 데이터 테이블의 정보를 업데이트 할 수도 있었고
	  - 컴포짓 데이터 테이블로 2개의 데이터 테이블에 대해서 합치는 것도 가능했음
	  - 데이터 테이블을 블프 내에 변수로서 사용할 수도 있음

	  4. 이 데이터 테이블 블프 클래스내에서 어떻게 쓰는가 ?
	   - 위에서 말했듯 변수로서 관리 가능하고
	   - 그 변수에 대해 핀 끌어다 놓고 본 함수 3개가 있었는데 원형 이름을 적어보면
			- Does Data Table Row Exist, 행이 존재하는지
			- Get Data Table Column as String, 컬럼을 문자열로 얻어오기
			- Get Data Table Row Names, 행의 이름들 전부 얻어오기

		- 실질적으로 데이터 테이블에서 정보를 가져오려면 <데이터 테이블 행 가져오기> 라는 노드를 써야했고
			- 행 이름을 알아야만 정보를 얻어 올 수 있는데
			- 위에서 언급한 3개의 원형 중에 행 이름을 전부 얻어와서 처리하는 방법도 가능하긴 하나
			- 문자열 기반의 탐색은 불안정한 면이 많기에 우회하는 방법을 찾아야 했음
			- 행 이름을 관리하는 것이 문제라는 것임
		
		5. 이 내용을 하다가 언리얼의 문자열 3개의 차이점 간략하게 설명해줌 string, name, text
		 - string : 우리가 흔히 알고 있는 문자열이라고 생각하면 됨
		 - name : bone이나 특정 대상들에 대해 이름을 정해줄 때 사용했음, 대소문자의 구분이 없음, 한번 만들고 나면 편집이 안 됨
		 - text : 사용자에게 보여지는 문자, Display되는 문자열, 현지화가 가능한 문자열, 그 외 추가 기능이 있음
		 - 유의점 : name <-> text 사이 변환은 한 번에 안 이뤄져서 string을 거쳐가야 하는 문제가 있음

		 6. 이 문제를 해결하기 위해 열거형에 이름을 지어주기 전에 먼저 String Table을 하나 만들어주었음
		  - String Table은 Map 컨테이너처럼 Key - Value 느낌으로 사용하게 되는데
		  - 이렇게 만든 String Table을 열거형에서 어떻게 사용해주냐면
		  - 디스플레이 이름에 있는 아래방향 화살표 눌러주게 되면 어떤 StringTable쓸지 정하는 옵션이 있음
		  - 열거자를 2개 이상 추가할 때 1번 키를 물고 있는 멤버가 있게 되면 추가가 안 되는 웃픈 버그가 있음(잠시 1번을 풀어주는 식으로 해야 함)

		  - 이렇게 하고 나면 String Table에서 변경한 값이 열거형을 물고 있는 모든 string에 반영 됨

		  7. 위에서 열거형에 대해선 String Table로 일관성을 유지시켜줬는데
		   - 열거형의 이름이 데이터 테이블과 매치되는 것은 또 별개의 문제라는 것, 매칭하리란 보장이 없음
		   - 방법 : 엑셀에서 sheet를 만들고 StringTable의 value를 데이터 테이블의 행 이름이 참조하게 만들어 주면 됨
		   - StringTable에 대한 sheet1, DataTable에 대한 Sheet2를 만들게 되면 엑셀의 기본 파일형식인 .xlsx형식인데 이 형식은 언리얼에서 사용 불가능하고
		   - 그렇게 때문에 하나의 sheet를 가지는 .csv파일로 따로 관리해 주어야 하는 불편함이 있긴 함
		   - 참고로 엑셀에서 다른 열 참조하는 방법은 알아봐야 하긴 함...
		   
		   8. 위의 작업이 혹시 안된다면 ? 의심해봐야 할 것
		    - 엑셀 파일 내에서 형식을 맞춰주어야 함
			- StringTable을 읽어 올 때 최상단에 Key, SourceString을 적어주고 그 밑에 데이터들 나열해줘야 함

			9. 결론적으로 위에서 쓴 방법들 굉장히 번거롭고 기획자랑 일할 때 써먹을만한 방법임
			 - 하지만 문자열의 일관성 관리를 하는 시스템의 구축 자체는 대규모로 일할 때 굉장히 중요한 요건

			 10. 최종 방법은 데이터 에셋을 사용하는 것인데
			  - Primary Data Asset이라는 블루프린트 클래스를 먼저 만들고
			  - 위에서 정의한 클래스 내에서 쓸 구조체를 하나 정의해주고 ( AnimMonage, float, name )
			  - Primary Data Asset 클래스에서 변수로 위 구조체를 가져주고
			  - 콘텐츠 브라우저 - 기타 - 데이터 에셋을 눌러서 만들고 엘리먼트 추가로 데이터들 관리 가능
			  - 데이터들에 대해 맨 위 탭에서 전부 펼침, 전부 접기 가능
			  - 허나 이것도 일일이 관리하는 것이라 번거롭기 때문에 다음 시간에...

*/