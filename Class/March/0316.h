#pragma once
/*
1. 무기가 overlap되면 ApplyDamage를 일으키면 그 이벤트를 BP_Character쪽에서 AnyDamage로서 받고 있는데 이떄 주인에 대한 처리가 안되어있기에 자해를 하는
무기가 됨
 - Instigator이면 데미지를 안 주는 식으로 처리함
 - owner를 쓰면 안되는 이유는 무기의 owner가 instigator가 아닐수도 있기 떄문(활집의 주인이 활인 경우 정도 ?)

2. BP_Character에서 BP_Weapon에 대해서 Bp_Weapon의 클래스들에 대해서 SpawnActor를 하게 되는데 이때 BP_Weapon 클래스들에 대해 배열에 담아 놓고
for each loop를 통해 담아 놓은 모든 클래스들에 대해 spawn 시켜줌
 - 옵션에 대한 부가 설명이 좀 많았는데
 - spawn transform을 지정해주지 않으면 에러가 났고 지정할 수 있는 2가지 방법은 1)핀분할 2)MakeTransform
 - weapon의 owner는 self(character 자신)
 - collision handle override 옵션은 default로 잡혀있는데 이 옵션이 뭐냐면
  - 액터가 월드에 없다가 생기는 것이기 때문에 그 위치에 다른 액터가 있을 수 있음
  - 이 때 처리를 어떻게 해줄지를 정해주는 것인데 actor의 클래스 디폴트 탭에서 기본값 설정해줄 수 있었음
 - Instigagtor는 따로 설정해주지 않으면 owner로 설정된다고 함

3. BP_Player에 와서 손에 붙여 보기 위해 일단 클래스 세팅에서 weapons 배열에 BP_Sword를 0번 인덱스에 넣어주었고
이 0번에 넣어놓은 무기를 hand_r 소켓에 넣어주려고 하는데 이 때 AttachActorToComponent 함수를 사용함
옵션이 많았는데
 - 타깃 : 무기 자신
 - parent : 함수 이름에서 알 수 있듯이 무기(actor)를 socket이 있는 오른손, 즉 스켈레탈메시를 가지고 있는 mesh(component)였음, 즉 mesh를 달아줌
 - transform에 대해 rule을 정할 수 있는데 socket의 transform과 actor의 transform 둘중 어떤걸 쓸지 혹은 둘을 곱해서 쓸지 정도의 옵션임
   - keep relative : socket * actor
  - keep world : actor
  - Snap to Target : socket

4. 칼을 꺼내는 모션을 달아주기 위해 Draw_1, Draw_2의 애니메이션 시퀀스를 사용해야 했는데 칼을 달고 나니깐 칼이 등을 파고드는 등 애니메이션을 조금 수정해야 했음
 - 이처럼 맞지 않는 애니메이션이랑 무기 조합이 있을 수 있는데 이럴 때 밑에서 말할 작업을 해줘야 함
 - 보통 맞는 걸 찾아쓰게 된다고 함..

5. 수정해줘야 하는 애니메이션의 본을 찾고 애니메이션의 몇 프레임부터 수정을 해줘야 하는지를 정하고 그때의 transform을 바꿔주는 작업인데
 - Draw_1의 경우 upperarm_r, lowerarm_r, hand_r에 대해 바꿔주어야 했고 각 본은 클릭한 뒤 에디터 상단에 키[key]를 눌러주어 에디티브 레이어 트랙을 만들어 줌
 - 만들어진 에디티브 레이어 트랙을 수정하는 작업인데
 - 원하는 프레임에 가서 수정헤야 할 본에 대해 transform을 바꾸고 키[key]를 누르게 되면 그래프가 바뀜으로서 수정이 이루어진 것이고 이 작업의 반복을 해야 함

6. 애니메이션이란 구분동작을 선형보간하여 만드는 것이 기본인데 이렇게 만들어진 구분동작에 대해 추가적인 동작을 주는 작업이 에디티브 레이어 트랙이였음

7. 칼을 뽑는 애니메이션을 자연스럽게 만들어주었고 그렇다면 칼을 뽑을 위치를 정해주어야 하는데
 - 어떤 본에 소켓을 달아줄까 했을 때 ?
 - 만약 목에 달게 되면 목이 아래를 향하게 되면 칼은 목의 transform을 따라 바닥을 수직이닥 바닥과 수평이 될 것임
 - 따라서 움직임이 적을 spine_03을 골라주었음

8. spine_03에 소켓을 만들고 프리뷰 에셋을 하여 칼의 위치를 잡아주었는데
 - 칼을 딱 쥐어야 하는 시점에 맞는 Draw_01의 지점을 찾고 그 위치랑 겹치게 세팅해주면 되었음

9. 등에 붙어있던 칼을 Draw_1이 끝나는 시점에서 손으로 옮겨붙여 주어야 했는데
 - 이 때 Draw_1의 애니메이션에서 노티파이 이벤트를 발생시켜서 ABP_Character에서 손으로 옮겨붙여주는 작업을 해야하는데
 - 안 좋은 방법의 예시를 일단 설명해주었고 그 이유를 찾는게 과제였음
 - 추정한 이유로는 무기를 꺼내는 모션에 대해 무기가 꺼내져있는지에 대한 체크가 없이 손에 붙는 처리 방식이 문제였다고 생각했음
*/